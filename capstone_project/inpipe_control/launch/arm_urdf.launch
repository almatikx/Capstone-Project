<launch>
  <!-- Arguments for robot initial pose -->
  <arg name="arg_x" default="0.00" />
  <arg name="arg_y" default="0.00" />
  <arg name="arg_z" default="0.00" />
  <arg name="arg_R" default="0.00" />
  <arg name="arg_P" default="0.00" />
  <arg name="arg_Y" default="0.00" />

  <!-- URDF file path -->
  <param name="robot_description" textfile="$(find inpipe_description)/urdf/main_urdf_assembly_new.urdf" />

  <!-- Spawn an empty Gazebo world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" />

  <!-- Static transform between base_link and base_footprint -->
  <node name="tf_footprint_base" 
        pkg="tf" 
        type="static_transform_publisher" 
        args="0 0 0 0 0 0 base_link base_footprint 40" />

  <!-- Spawn the robot model in Gazebo -->
  <node name="spawn_urdf" 
        pkg="gazebo_ros" 
        type="spawn_model" 
        args="-x $(arg arg_x) -y $(arg arg_y) -z $(arg arg_z) -Y $(arg arg_Y) 
              -param robot_description -urdf 
              -model main_urdf_assembly_new 
              -J joint_1 0.0 -J joint_2 0.0 -J joint_3 0.0" />

  <!-- Load joint trajectory controllers -->
  <rosparam file="$(find inpipe_control)/config/joint_trajectory_controller.yaml" command="load" />

  <!-- Spawn controllers -->
  <node name="controller_spawner" 
        pkg="controller_manager" 
        type="spawner" 
        respawn="false" 
        output="screen" 
        args="/robot/joint_state_controller 
              /robot/joint1_position_controller 
              /robot/joint2_position_controller 
              /robot/joint3_position_controller" />

  <!-- Robot State Publisher -->
  <node name="robot_state_publisher" 
        pkg="robot_state_publisher" 
        type="robot_state_publisher" 
        respawn="false" 
        output="screen" />
</launch>

